//HERENCIA: con herencia podemos crear otras clases que tengan los mismos atributos y los métodos de la clase principal.

class Transporte { // creamos la clase principal Transporte para después crear subclases o clase hijo

    //esto es un constructor con la nueva sintaxis de PHP()
    public function __construct(protected int $ruedas, protected int $capacidad)
    {    
    }

    //esto e un método
    public function getInfo() : string {
        return "El transporte tiene " . $this->ruedas . " ruedas y una capacidad de " . $this->capacidad . " personas ";
    }

    //se crea un nuevo método en la clase padre para que hereden automáticamente las clases hijo la posibilidad de acceder a ruedas
    public function getRuedas() : int {
        return $this->ruedas;
    }
}


class Bicicleta extends Transporte { //con la palabra reservada extends se crea la clase hijo Bicicleta que va a heredar los atributos y métodos de Transporte.

    public function getInfo() : string {
        return "El transporte tiene " . $this->ruedas . " ruedas y una capacidad de " . $this->capacidad . " personas y NO GASTA GASOLINA ";
    }//aquí se hereda el método del elemento padre pero se reescribe, no es necesario crear un nuevo método
}

class Automovil extends Transporte {
    //para que Automovil tenga un atributo propio se le crea un constructor
    public function __construct(protected int $ruedas, protected int $capacidad, protected string $transmision)
    {  
    }
 
    public function getTransmision() : string {
        return $this->transmision;
    }
}

$bicicleta = new Bicicleta(2, 1);
echo $bicicleta->getInfo();
echo $bicicleta->getRuedas();
//echo $bicicleta->getTransmision(); no va a estar disponible porque ese método está unicamente definido en Automovil, clase hijo

echo "<hr>";

$auto = new Automovil(4, 4, 'Manual');
echo $auto->getInfo();
echo $auto->getTransmision();

//Los atributos que se van a compartir ambas clases hijo se colocan en la clase padre, pero si hay atributos nuevos en alguna sclase hijo en específico, se coloca un constructor dentro de ésta.
